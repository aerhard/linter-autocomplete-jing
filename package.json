{
  "name": "linter-autocomplete-jing",
  "main": "./lib/main.coffee",
  "version": "0.8.4",
  "description": "Autocomplete and on-the-fly validation of XML documents against RELAX NG (compact, XML), Schematron (1.5, ISO), W3C Schema (XSD 1.0) and DTD",
  "keywords": [
    "xml",
    "relaxng",
    "schematron",
    "xsd",
    "validation",
    "autocomplete"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/aerhard/linter-autocomplete-jing.git"
  },
  "bugs": "https://github.com/aerhard/linter-autocomplete-jing/issues",
  "license": "SEE LICENSE IN LICENSE.md",
  "author": "Alexander Erhard (https://github.com/aerhard/)",
  "engines": {
    "atom": ">=1.13.0 <2.0.0"
  },
  "dependencies": {
    "atom-linter": "10.0.0",
    "atom-package-deps": "7.0.3",
    "cross-spawn": "7.0.3",
    "sax": "^1.2.2"
  },
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-core": "^6.18.2",
    "babel-eslint": "^7.1.1",
    "babel-plugin-external-helpers": "^6.18.0",
    "babel-preset-es2015": "^6.18.0",
    "babel-preset-es2015-rollup": "3.0.0",
    "babelrc-rollup": "^3.0.0",
    "eslint": "^3.11.0",
    "eslint-config-airbnb-base": "11.1.3",
    "eslint-plugin-import": "^2.1.0",
    "eslint-plugin-jasmine": "^2.1.0",
    "jasmine-fix": "^1.3.1",
    "lodash-es": "^4.17.20",
    "rollup-plugin-babel": "^2.6.1",
    "rollup-plugin-cleanup": "1.0.0",
    "rollup-plugin-node-resolve": "3.0.0",
    "rollup-watch": "3.2.2"
  },
  "package-deps": [
    {
      "name": "linter",
      "minimumVersion": "2.0.0"
    }
  ],
  "scripts": {
    "eslint": "eslint .",
    "test": "apm test",
    "lint": "eslint src",
    "build": "rollup -c",
    "watch": "rollup -c --watch"
  },
  "providedServices": {
    "linter": {
      "versions": {
        "2.0.0": "provideLinter"
      }
    },
    "autocomplete.provider": {
      "versions": {
        "2.0.0": "provideAutocomplete"
      }
    }
  },
  "configSchema": {
    "javaExecutablePath": {
      "type": "string",
      "default": "java"
    },
    "jvmArguments": {
      "type": "string",
      "title": "JVM Arguments",
      "default": "-Xms32m -Xmx256m"
    },
    "schemaCacheSize": {
      "type": "integer",
      "minimum": 0,
      "default": 10
    },
    "displaySchemaWarnings": {
      "title": "Display Schema Parser Warnings",
      "type": "boolean",
      "default": false
    },
    "xmlCatalog": {
      "title": "XML Catalog",
      "type": "string",
      "default": ""
    },
    "dtdValidation": {
      "title": "DTD Validation",
      "type": "string",
      "default": "fallback",
      "enum": [
        "never",
        "always",
        {
          "value": "fallback",
          "description": "only as fallback"
        }
      ]
    },
    "xIncludeAware": {
      "title": "XInclude Aware",
      "type": "boolean",
      "default": true
    },
    "xIncludeFixupBaseUris": {
      "title": "XInclude Fixup Base URIs",
      "type": "boolean",
      "default": true
    },
    "xIncludeFixupLanguage": {
      "title": "XInclude Fixup Language",
      "type": "boolean",
      "default": true
    },
    "wildcardSuggestions": {
      "type": "string",
      "default": "none",
      "enum": [
        "none",
        "localparts",
        "all"
      ]
    },
    "autocompletePriority": {
      "type": "integer",
      "default": 1
    },
    "autocompleteScope": {
      "type": "object",
      "properties": {
        "rnc": {
          "title": "RNC",
          "type": "boolean",
          "default": true
        },
        "rng": {
          "title": "RNG",
          "type": "boolean",
          "default": true
        },
        "xsd": {
          "title": "XSD",
          "type": "boolean",
          "default": true
        }
      }
    },
    "rules": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "number"
          },
          "test": {
            "type": "object",
            "properties": {
              "grammarScope": {
                "type": "string"
              },
              "pathRegex": {
                "type": "string"
              },
              "rootNs": {
                "type": "string"
              },
              "rootLocalName": {
                "type": "string"
              },
              "rootAttributes": {
                "type": "object"
              }
            }
          },
          "outcome": {
            "type": "object",
            "properties": {
              "xmlCatalog": {
                "type": "string"
              },
              "schemaProps": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "lang": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              },
              "dtdValidation": {
                "type": "string",
                "default": "fallback",
                "enum": [
                  "never",
                  "always",
                  "fallback"
                ]
              }
            }
          }
        }
      },
      "default": []
    }
  }
}
